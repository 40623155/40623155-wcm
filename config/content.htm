<h1>簡介</h1>
<p>虎尾科技大學 - 網際內容管理 - 40623155</p>
<p><span>主題連結</span></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/%E7%B6%B2%E8%B7%AF%E9%80%A3%E7%B7%9A%E8%A8%AD%E5%AE%9A.html">網路連線設定</a></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/%E9%85%8D%E7%BD%AE%E5%8F%AF%E6%94%9C%E7%A8%8B%E5%BC%8F%E7%92%B0%E5%A2%83.html">配置可攜程式環境</a></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/%E5%80%89%E5%84%B2%E6%94%B9%E7%89%88.html">倉儲改版</a></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/%E9%9D%9C%E6%85%8B%20CMSimfly.html">靜態 CMSimfly</a></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/Mobile%20%E7%B6%B2%E7%AB%99%E5%85%A7%E5%AE%B9.html">Mobile 網站內容</a></p>
<p><a href="https://40623155.github.io/40623155-wcm/content/Virtual%20Host.html">Virtual Host</a></p>
<p>期末影片</p>
<p></p>
<p><strong>自評成績：</strong></p>
<p>80分</p><h1>網路連線設定</h1>
<h2>Proxy設置</h2>
<p><span>1.打開chrome後點擊右上角"<strong>：</strong>"裡的<strong>設定</strong></span><br/><span><br/></span><span></span><span>2.移動到最下方&gt;進階&gt;開啟proxy設定</span><br/><span><br/></span><span></span><span>3.點選LAN設定&gt;打開proxy&gt;輸入140.130.17.32&gt;3128即可</span></p>
<p><span>操作影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/CLfc82cOT3s" width="560"></iframe></span></p>
<p></p>
<p></p>
<h2>網路故障(IPV6設置)</h2>
<p></p>
<p><span>遇到學校伺服器IP掛掉問題</span><br/><span>Step1.關閉網路第四版協定</span></p>
<p><span><img alt="" height="533" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/SfF6oN78hU.png" width="937"/></span></p>
<p><span><img alt="" height="497" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/SfF6oN78hU.png" width="873"/></span></p>
<p>打開IPV6</p>
<p>修改內容設定，打開DNS並輸入</p>
<p>2001:b000:168::1</p>
<p><img alt="" height="407" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/dllhost_QcMKXfshAM.png" width="495"/></p>
<p>修改proxy內容</p>
<p>[2001:288:6004:17::4]</p>
<p><img alt="" height="386" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/rundll32_9PmorqmYBC.png" width="443"/></p>
<p><span>完成修改後便能上網</span></p>
<p><span>操作影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GCkqpenIXk4" width="560"></iframe></span></p>
<h1>配置可攜程式環境</h1>
<h2>指令介紹</h2>
<p>基本的 DOS (Disk Operating System) 指令<br/><br/>C:\&gt; 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為<br/><br/>Y:\&gt;<br/><br/>若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如:<br/><br/>Y:\&gt;cd tmp<br/><br/>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是<br/><br/>Y:\tmp&gt;<br/><br/>若要再回到 Y 槽的根目錄, 可以使用 cd ..<br/><br/>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.<br/><br/>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \<br/><br/>直接回到根目錄.<br/><br/>或者從 Y:\&gt; 直接使用<br/><br/>cd \tmp\repo\ssh\wcm2019<br/><br/>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;<br/><br/>此外, 常用的 DOS 指令有:<br/><br/>dir - 列出目前所在目錄的內容<br/><br/>mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄<br/><br/>cls - clear screen, 清除目前的命令列顯示的內容</p>
<h2>懶人包</h2>
<p>課堂上老師釋出可攜系統懶人包於課程網站</p>
<p>課程網站連結：<a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a></p>
<p>懶人包版可攜系統：<a href="https://drive.google.com/file/d/1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79/view">請點此</a></p>
<p></p>
<h2>建立可攜系統影片</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NI12Vtl_fw4" width="560"></iframe></p>
<h1>倉儲改版</h1>
<h2>GIT指令</h2>
<p><span>建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版</span><br/><br/><span>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令.</span><br/><br/><span>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.</span><br/><br/><span>另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.</span><br/><br/><span>git add</span><br/><br/><span>git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.</span><br/><br/><span>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:</span><br/><br/><span>git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add</span><br/><br/><span>git commit<span> </span></span><br/><br/><span>git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.</span><br/><br/><span>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.</span><br/><br/><span>git push</span><br/><br/><span>git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.</span></p>
<p><strong>操作影片</strong></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/d76_i11RCPI" width="560"></iframe></span></p><h2>.ssh(Portable Python)</h2>
<p><span dir="ltr">進入<a href="http://mde.tw/#/">mde.tw</a>，進入<a href="https://2019wcm.blogspot.com/">2019 網際內容管理課程示範網</a></span><a href="https://2019wcm.blogspot.com/">誌</a>，點入<a href="https://2019wcm.blogspot.com/search/label/portable%20python">portable python</a></p>
<p>開始進入本次的編輯教學網頁：</p>
<p><img alt="" height="769" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/chrome_5Lj2vWEcw8.png" width="514"/></p>
<p>-------------------------------------------------------------------------------------------------------------</p>
<p>使用</p>
<p><span>git config --edit --system</span></p>
<p>跳出此畫面</p>
<p><img alt="" height="431" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/cmd_n4svqn30e8.png" width="804"/></p>
<p>往下移動，使用按鍵"J"到最底下</p>
<p><img alt="" height="472" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/cmd_VdJUU1k1F8.png" width="903"/></p>
<p>連按兩次d鍵，刪除此行</p>
<p>接著按下Esc &gt;<span> </span><g class="gr_ gr_73 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace" data-gr-id="73" id="73">輸入 :</g><g class="gr_ gr_71 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling" data-gr-id="71" id="71">wq</g>   (儲存剛剛所刪之動作)</p>
<p>接著於Y:tmp下輸入"sh"會跑出下圖：</p>
<p><img alt="" height="79" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/cmd_B048LV8VeE.png" width="248"/></p>
<p>接著於scite貼上</p>
<p><span>ssh-keygen -t<span> </span><g class="gr_ gr_69 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace" data-gr-id="69" id="69">rsa</g><span> </span>-b 4096 -C "This is my key"</span></p>
<p><span>修改<g class="gr_ gr_70 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep" data-gr-id="70" id="70">""</g>內註解</span></p>
<p><span><img alt="" height="176" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/SciTE_9kkeDEjFVd.png" width="354"/></span></p>
<p><span>修改後貼上</span></p>
<p><span><img alt="" height="110" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/cmd_ty7MP29dBW.png" width="490"/></span></p>
<p>查看y:home底下是否有.ssh資料夾</p>
<p>若沒有就使用</p>
<p><g class="gr_ gr_67 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling" data-gr-id="67" id="67">mkdir</g><span> </span>.ssh</p>
<p>以用來建立資料夾</p>
<p><img alt="" height="274" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/chrome_M4tTDLxIDc.png" width="309"/></p>
<p>接著就持續Enter以建立key</p>
<p><img alt="" height="374" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/cmd_RIPiWrtS3j.png" width="448"/></p>
<p>後續到</p>
<p>Y:\home\.ssh</p>
<p><span>查看是否有無建立成功</span></p>
<p><span><img alt="" height="199" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/explorer_OO2AsJ166Y.png" width="606"/></span></p>
<p>使用scite打開"id_rsa.pub"，把內容key複製起來</p>
<p>開啟github&gt;登入個人帳號&gt;setting&gt;SSH and GPG keys&gt;新增KEY</p>
<p><img alt="" height="160" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/chrome_sDtNQH8gvM.png" width="769"/></p>
<p>接著輸入下圖步驟：</p>
<p><img alt="" height="655" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/chrome_Wpib05uwrg.png" width="1358"/></p>
<p>完成後會出現</p>
<p><img alt="" height="296" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g6/images/chrome_4iRdh69e3S.png" width="770"/></p>
<p><strong>個人操作影片</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rW7FbyUEmH4" width="560"></iframe></p>
<p><strong>教師示範影片</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/t4PslV5Abjs" width="560"></iframe></p>
<h1>靜態 CMSimfly</h1>
<p><span>1.進入自己的倉儲資料夾</span><br/><span><br/></span><span></span><span>2.輸入python wsgi.py來開啟動態</span><br/><span><br/></span><span></span><span>3.進行改版或更新save</span><br/><span><br/></span><span></span><span>4.完成後按generate_pages來儲存</span><br/><span><br/></span><span></span><span>5.輸入git status &gt; git add . &gt; git commit -m "標題" &gt; git push</span></p>
<p>操作影片：</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ptwMvs0qPCc" width="560"></iframe></p>
<h1>Mobile 網站內容</h1>
<p>1.進入<a href="http://cpgx.kmol.info/wcm2019/content/index.html">http://cpgx.kmol.info/wcm2019/content/index.html</a></p>
<p>2.系統開發&gt;Mobile 網站內容&gt;套用模板一</p>
<p><a href="http://cpgx.kmol.info/wcm2019/content/%E5%A5%97%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%80.html">http://cpgx.kmol.info/wcm2019/content/%E5%A5%97%E7%94%A8%E6%A8%A1%E6%9D%BF%E4%B8%80.html</a></p>
<p><img alt="" height="404" src="/images/chrome_a3MAI6xbT1.png" width="1010"/></p>
<p>3.點用套用模板，進入網址</p>
<p><a href="https://themewagon.com/themes/free-html5-bootstrap-4-business-website-template-chimper/">https://themewagon.com/themes/free-html5-bootstrap-4-business-website-template-chimper/</a></p>
<p><img alt="" height="779" src="/images/chrome_8nXiXnMvVF.png" width="1586"/></p>
<p>4.在所需填入空格輸入自己的電子郵件</p>
<p><img alt="" height="240" src="/images/chrome_qLMdf8o77f.png" width="446"/></p>
<p>5.下載後解壓</p>
<p></p>
<p>6.<span>開起一個老師的新模板倉儲 &gt; 以Raw打開cmsimfly.leo</span></p>
<p><br/><span><br/></span><span>7.複製全部 &gt; 到自己的倉儲cmsimfly.leo &gt; 貼上並儲存</span></p>
<p><br/><span><br/></span><span>8.以Raw打開老師的flaskapp.py &gt; 一樣步驟貼上並儲存</span></p>
<p><br/><span><br/></span><span>9.進入動態更改 &gt; 直接按generate_pages儲存即可</span></p>
<h1>Virtual Host</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fjIMW4cLR4I" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5gKWro5luhQ" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0AyOzEneqII" width="560"></iframe></p>
<h1>網站項目</h1>
<h2>目錄結構</h2>
<p>CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案.</p>
<p>content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案.</p>
<p>動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔.</p>
<p>static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔.</p>
<h2>頁面編輯</h2>
<p>CMSimfly 動態系統的網際編輯器採用 <a href="https://www.tiny.cloud/">TinyMCE4</a>, 可以放入一般超文件,  納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼.</p>
<p>透過 File Upload 功能, 可以一次上傳多個檔案,  存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結.</p>
<p>而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中.</p>
<h2>插入程式碼</h2>
<p>CMSimfly 目前使用 Syntaxhighlighter 3.0.83:</p>
<p> <a href="http://alexgorbatchev.com/SyntaxHighlighter/">http://alexgorbatchev.com/SyntaxHighlighter/</a> </p>
<p>進行頁面中的程式碼高亮顯示.</p>
<h3>Java 程式碼</h3>
<pre class="brush:java;auto-links:false;toolbar:false" contenteditable="false">import java.util.Scanner;

public class Life {
    public static void show(boolean[][] grid){
        String s = "";
        for(boolean[] row : grid){
            for(boolean val : row)
                if(val)
                    s += "*";
                else
                    s += ".";
            s += "\n";
        }
        System.out.println(s);
    }
    
    public static boolean[][] gen(){
        boolean[][] grid = new boolean[10][10];
        for(int r = 0; r &lt; 10; r++)
            for(int c = 0; c &lt; 10; c++)
                if( Math.random() &gt; 0.7 )
                    grid[r][c] = true;
        return grid;
    }
    
    public static void main(String[] args){
        boolean[][] world = gen();
        show(world);
        System.out.println();
        world = nextGen(world);
        show(world);
        Scanner s = new Scanner(System.in);
        while(s.nextLine().length() == 0){
            System.out.println();
            world = nextGen(world);
            show(world);
            
        }
    }
    
    public static boolean[][] nextGen(boolean[][] world){
        boolean[][] newWorld 
            = new boolean[world.length][world[0].length];
        int num;
        for(int r = 0; r &lt; world.length; r++){
            for(int c = 0; c &lt; world[0].length; c++){
                num = numNeighbors(world, r, c);
                if( occupiedNext(num, world[r][c]) )
                    newWorld[r][c] = true;
            }
        }
        return newWorld;
    }
    
    public static boolean occupiedNext(int numNeighbors, boolean occupied){
        if( occupied &amp;&amp; (numNeighbors == 2 || numNeighbors == 3))
            return true;
        else if (!occupied &amp;&amp; numNeighbors == 3)
            return true;
        else
            return false;
    }

    private static int numNeighbors(boolean[][] world, int row, int col) {
        int num = world[row][col] ? -1 : 0;
        for(int r = row - 1; r &lt;= row + 1; r++)
            for(int c = col - 1; c &lt;= col + 1; c++)
                if( inbounds(world, r, c) &amp;&amp; world[r][c] )
                    num++;

        return num;
    }

    private static boolean inbounds(boolean[][] world, int r, int c) {
        return r &gt;= 0 &amp;&amp; r &lt; world.length &amp;&amp; c &gt;= 0 &amp;&amp;
        c &lt; world[0].length;
    }

}</pre>
<p></p>
<h3>Python 程式碼</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def parse_content():
    """use bs4 and re module functions to parse content.htm"""
    #from pybean import Store, SQLiteWriter
    # if no content.db, create database file with cms table
    '''
    if not os.path.isfile(config_dir+"content.db"):
        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))
        cms = library.new("cms")
        cms.follow = 0
        cms.title = "head 1"
        cms.content = "content 1"
        cms.memo = "first memo"
        library.save(cms)
        library.commit()
    '''
    # if no content.htm, generate a head 1 and content 1 file
    if not os.path.isfile(config_dir+"content.htm"):
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
    subject = file_get_contents(config_dir+"content.htm")
    # deal with content without content
    if subject == "":
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
        subject = "&lt;h1&gt;head 1&lt;/h1&gt;content 1"
    # initialize the return lists
    head_list = []
    level_list = []
    page_list = []
    # make the soup out of the html content
    soup = bs4.BeautifulSoup(subject, 'html.parser')
    # 嘗試解讀各種情況下的標題
    soup = _remove_h123_attrs(soup)
    # 改寫 content.htm 後重新取 subject
    with open(config_dir + "content.htm", "wb") as f:
        f.write(soup.encode("utf-8"))
    subject = file_get_contents(config_dir+"content.htm")
    # get all h1, h2, h3 tags into list
    htag= soup.find_all(['h1', 'h2', 'h3'])
    n = len(htag)
    # get the page content to split subject using each h tag
    temp_data = subject.split(str(htag[0]))
    if len(temp_data) &gt; 2:
        subject = str(htag[0]).join(temp_data[1:])
    else:
        subject = temp_data[1]
    if n &gt;1:
            # i from 1 to i-1
            for i in range(1, len(htag)):
                head_list.append(htag[i-1].text.strip())
                # use name attribute of h* tag to get h1, h2 or h3
                # the number of h1, h2 or h3 is the level of page menu
                level_list.append(htag[i-1].name[1])
                temp_data = subject.split(str(htag[i]))
                if len(temp_data) &gt; 2:
                    subject = str(htag[i]).join(temp_data[1:])
                else:
                    subject = temp_data[1]
                # cut the other page content out of htag from 1 to i-1
                cut = temp_data[0]
                # add the page content
                page_list.append(cut)
    # last i
    # add the last page title
    head_list.append(htag[n-1].text.strip())
    # add the last level
    level_list.append(htag[n-1].name[1])
    temp_data = subject.split(str(htag[n-1]))
    # the last subject
    subject = temp_data[0]
    # cut the last page content out
    cut = temp_data[0]
    # the last page content
    page_list.append(cut)
    return head_list, level_list, page_list

</pre>
<p></p>
<h3>C或C++程式碼</h3>
<p>請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為  "C/C++程式碼", 則無法進行分頁.</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">/* Runge Kutta for a set of first order differential equations */
 
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
 
#define N 2 /* number of first order equations */
#define dist 0.1 /* stepsize in t*/
#define MAX 30.0 /* max for t */
 
FILE *output; /* internal filename */
FILE *output1; /* internal filename */
// 利用 pipe 呼叫 gnuplot 繪圖
FILE *pipe;
 
void runge4(double x, double y[], double step); /* Runge-Kutta function */
double f(double x, double y[], int i); /* function for derivatives */
 
void main(){
 
  double t, y[N];
  int j;
 
  output=fopen("osc.dat", "w"); /* external filename */
  output1=fopen("osc1.dat", "w"); /* external filename */
 
  y[0]=1.0; /* initial position */
  y[1]=0.0; /* initial velocity */
 
  //fprintf(output, "0\t%f\n", y[0]);
 
  for (j=1; j*dist&lt;=MAX ;j++) /* time loop */{
 
    t=j*dist;
    runge4(t, y, dist);
    fprintf(output, "%f\t%f\n", t, y[0]);
    fprintf(output1, "%f\t%f\n", t, y[1]);
  }
 
  fclose(output);
  fclose(output1);
 
  pipe = popen("gnuplot -persist","w");
  //fprintf(pipe,"set term png enhanced font \"v:/fireflysung.ttf\" 18 \n");
  fprintf(pipe,"set term png enhanced font \"y:/wqy-microhei.ttc\" 18 \n");
  //fprintf(pipe,"set yrange [68:70]\n");
  fprintf(pipe,"set output \"test.png\"\n");
  fprintf(pipe, "plot \"osc.dat\" title \"位移\" with lines, \"osc1.dat\" title \"速度\" with lines\n");
  fprintf(pipe,"quit\n");

  fprintf(pipe,"quit\n");
  pclose(pipe);
}
 
void runge4(double x, double y[], double step){
 
  double h=step/2.0, /* the midpoint */
  t1[N], t2[N], t3[N], /* temporary storage arrays */
  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */
  int i;
 
  for (i=0;i&lt;N;i++){
 
    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    k4[i]= step*f(x+step, t3, i);
  }
 
  for (i=0;i&lt;N;i++){
 
    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;
  }
}
 
double f(double x, double y[], int i){
 
  if (i==0)
    x=y[1]; /* derivative of first equation */
  if (i==1)
    x=-y[0]-0.5*y[1];
  return x;
}</pre>
<p></p>
<h3>Lua 程式碼</h3>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 js 模組
js = require("js")
-- 取得 window
window = js.global
-- 猜小於或等於 n 的整數
big = 100
-- 計算猜測次數, 配合 while 至少會猜一次
num = 1
-- 利用 window:prompt 方法回應取得使用者所猜的整數
guess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")
-- 利用數學模組的 random 函數以亂數產生答案
answer = math.random(big)
output = ""
-- 若沒猜對, 一直猜到對為止
while answer ~= tonumber(guess) do
    if answer &gt; tonumber(guess) then
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"
        print(output)
    else
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"
        print(output)
    end 
    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")
    num = num + 1
end
print("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")
    </pre>
<p></p>
<h3>Javascript 程式碼</h3>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">STLViewer = function(stlpath, plotarea) {

	var mycanvas = document.getElementById(plotarea);
	var viewer = new JSC3D.Viewer(mycanvas)
	var theScene = new JSC3D.Scene;
	////Initialize with a default file:
	//var stlpath = "../../../assets/2013-10-23/stl/box.STL"
	//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"
	viewer.setParameter('SceneUrl', stlpath);
    viewer.setParameter('InitRotationX', 20);
	viewer.setParameter('InitRotationY', 20);
	viewer.setParameter('InitRotationZ', 0);
	viewer.setParameter('ModelColor', '#CAA618');
	viewer.setParameter('BackgroundColor1', '#FFFFFF');
	viewer.setParameter('BackgroundColor2', '#383840');
	viewer.init();
	viewer.update();
	////init done
	var canvas_drop = document.getElementById('canvas-drop')
	/*var dropzone = document.getElementById('dropzone')
	dropzone.addEventListener('dragover', handleDragOver, false);
	dropzone.addEventListener('drop', handleFileSelect, false); */
	canvas_drop.addEventListener('dragover', handleDragOver, false);
	canvas_drop.addEventListener('drop', handleFileSelect, false);

////Drag and drop logic:
	function handleFileSelect(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    var files = evt.dataTransfer.files;
	    console.log(evt)
	    console.log(files)
	    preview_stl(files[0])
	  }

	  function handleDragOver(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    evt.dataTransfer.dropEffect = 'copy';
	  }

////jsc3d logic
	var handle_file_select = function(e) {
		e.stopPropagation()
		e.preventDefault()
		var f = e.target.files[0]
		preview_stl(f)
	}

	function preview_stl(f) {
		var reader = new FileReader()
		var ext = f.name.split(".")[1]

		function setup_viewer() {
			viewer.setParameter('InitRotationX', 20);
			viewer.setParameter('InitRotationY', 20);
			viewer.setParameter('InitRotationZ', 0);
			viewer.setParameter('ModelColor', '#CAA618');
			viewer.setParameter('BackgroundColor1', '#FFFFFF');
			viewer.setParameter('BackgroundColor2', '#383840');
			viewer.setParameter('RenderMode', "flat");
		}
		setup_viewer()

		reader.onload = (function(file) {
			return function(e) {
				theScene = new JSC3D.Scene
		    	stl_loader = new JSC3D.StlLoader()
		    	stl_loader.parseStl(theScene, e.target.result)
		      	//viewer.init()
		      	viewer.replaceScene(theScene)
		      	viewer.update()
		      	console.log("file reader onload")
			}
		})(f)

		if (ext.toLowerCase() != "stl") {
			alert("That doesn't appear to be an STL file.");
		} else {
			reader.readAsBinaryString(f)
		}
	}
}
</pre>
<p></p>
<h3>Html 原始碼</h3>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;html&gt;
   &lt;head&gt;
      &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
      &lt;title&gt;CMSimfly&lt;/title&gt;
      &lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;div class='container'&gt;
      &lt;nav&gt;
         &lt;ul id='css3menu1' class='topmenu'&gt;
            &lt;li&gt;&lt;a href='/get_page/簡介'&gt;簡介&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/目錄結構'&gt;目錄結構&lt;/a&gt;
            &lt;li&gt;
               &lt;a href='/get_page/頁面編輯'&gt;頁面編輯&lt;/a&gt;
               &lt;ul&gt;
                  &lt;li&gt;
                     &lt;a href='/get_page/插入程式碼'&gt;插入程式碼&lt;/a&gt;
                     &lt;ul&gt;
                        &lt;li&gt;&lt;a href='/get_page/Java 程式碼'&gt;Java 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Python 程式碼'&gt;Python 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/C或C++程式碼'&gt;C或C++程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Lua 程式碼'&gt;Lua 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Javascript 程式碼'&gt;Javascript 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Html 原始碼'&gt;Html 原始碼&lt;/a&gt;&lt;/li&gt;
                        &lt;/li&gt;
                     &lt;/ul&gt;
               &lt;/ul&gt;
            &lt;li&gt;&lt;a href='/get_page/網際簡報'&gt;網際簡報&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/網誌編輯'&gt;網誌編輯&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/已知錯誤'&gt;已知錯誤&lt;/a&gt;&lt;/li&gt;
         &lt;/ul&gt;
      &lt;/nav&gt;
      &lt;section&gt;
         &lt;form method='post' action='/ssavePage'&gt;
         &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;&lt;h3&gt;Html 原始碼&lt;/h3&gt;&lt;/textarea&gt;
         &lt;input type='hidden' name='page_order' value='9'&gt;
         &lt;input type='submit' value='save'&gt;
         &lt;input type=button onClick="location.href='/get_page/Html 原始碼'" value='viewpage'&gt;
         &lt;/form&gt;
      &lt;/section&gt;
   &lt;/body&gt;
&lt;/html&gt;
COPY TO CLIPBOARD	</pre>
<p></p>
<h2>網際簡報</h2>
<p>CMSimfly 中採用 <a href="https://revealjs.com/#/">Reveal.js</a> 作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中.</p>
<h2>網誌編輯</h2>
<p>CMSimfly 採用 <a href="https://blog.getpelican.com/">Pelican blog</a> 系統, 編輯檔案位於 config/pelican.leo, 對應的</p>
<p> Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中.</p>
<p>執行 Pelican 之前, 必須先安裝下列模組:</p>
<p style="padding-left: 30px;">pip install pelican Markdown</p>
<p>其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下.</p>
<p>上傳檔案與圖檔的引用則與 CMSimfly 架構相同.</p>
<h1>已知錯誤</h1>
<h2>原已知</h2>
<h3>全部頁面會因無法正確解讀而誤刪</h3>
<p>在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理.</p>
<h3>頁面標題不支援特殊符號</h3>
<p>各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能.</p>
<h3>Video 引用不支援內部引用</h3>
<p>tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結.</p>
<h1>期中影片</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kbwwmXcEVNQ" width="560"></iframe></p><h1>期末影片</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mu0aWB5-v4k" width="560"></iframe></p>